#
# Copyright 2025, TeamDev. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Redistribution and use in source and/or binary forms, with or without
# modification, must retain the above copyright notice and the following
# disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

logging:
  receivers:
    # Loads logs from files in the project log folder.
    info_file:
      type: files
      include_paths: [ /var/log/pingh/*-info.log ]

  processors:
    # Identifies and parses the string corresponding to the informational log.
    #
    # Note that the regex keys correspond to the keys of the associated values
    # in the target `jsonPayload`.
    #
    extract_info_line:
      type: parse_regex
      regex: "^\\[(?<severity>([^\\]]*))\\] (?<time>([\\d-]*T[\\d:.]*)) (?<class>([^ ]*)) - (?<message>[^\\n]*)$"
      field: message
      time_key: time
      time_format: "%Y-%m-%dT%H:%M:%S.%L"

    # Specifies the severity that was extracted during the `extract_info_line` process.
    set_severity:
      type: modify_fields
      fields:
        severity:
          move_from: jsonPayload.severity
          # Replace the WARN level used in Log4j
          # with the WARNING level used in Google Cloud Logging.
          map_values:
            'WARN': WARNING

  service:
    pipelines:
      # Sends info logs, converting them each line to a JSON file and extracting severity.
      info_pipeline:
        receivers: [ info_file ]
        processors: [ extract_info_line, set_severity ]

      # Removes the sending of default logs.
      default_pipeline:
        receivers: []

metrics:
  service:
    pipelines:
      # Removes the sending of default metrics.
      default_pipeline:
        receivers: []
