/*
 * Copyright 2024, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine_examples.pingh.mentions;

import "spine/options.proto";

option (type_url_prefix) = "type.pingh.spine.io";
option java_package = "io.spine.examples.pingh.mentions.rejection";
option java_multiple_files = false;

import "spine_examples/pingh/mentions/identifiers.proto";
import "spine_examples/pingh/sessions/user_session.proto";

// A update of mentions from GitHub cannot be requested.
//
// Emitted when the token is revoked on the GitHub side.
// This means that the token needs to be updated.
message UsersGitHubTokenInvalid {

  // The ID of the GitHub client for which the mention update process failed to start.
  GitHubClientId id = 1 [(required) = true];

  // The name of the user who has an invalid token.
  spine_examples.pingh.sessions.Username username = 2 [(required) = true];
}

// A update of mentions from GitHub cannot be requested.
//
// Emitted when an update request comes in when the previous
// one came in less than a minute ago.
message CannotStartDataUpdateTooEarly {

  // The ID of the GitHub client for which the mention update process failed to start.
  GitHubClientId id = 1 [(required) = true];
}

// A update of mentions from GitHub cannot be requested.
//
// Emitted out when an update request comes in and the previous
// update has not completed.
message DataUpdateIsAlreadyInProgress {

  // The ID of the GitHub client for which the mention update process failed to start.
  GitHubClientId id = 1 [(required) = true];
}
