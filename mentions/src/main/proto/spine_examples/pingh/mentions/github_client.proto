/*
 * Copyright 2024, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine_examples.pingh.mentions;

import "spine/options.proto";

option (type_url_prefix) = "type.pingh.spine.io";
option java_package = "io.spine.examples.pingh.mentions";
option java_outer_classname = "GitHubClientProto";
option java_multiple_files = true;

import "spine_examples/pingh/mentions/identifiers.proto";
import "spine_examples/pingh/sessions/user_session.proto";

// The process of fetching mentions from the GitHub.
//
// The process starts responding to the UserLoggedIn event. The process ID is
// generated automatically.
//
// At regular intervals a FetchMentions command is generated. When receiving
// the command, the process enters the REQUESTED fetching state and does not
// accept any more FetchMentions commands. Further mentions is requested from
// GitHub and processed, creating UserMentioned events. After the end of
// processing, the process fetching state is set to COMPLETED and it can
// accept FetchMentions commands again.
//
// The state at initialization is set to COMPLETED.
message GitHubClient {
    option (entity) = { kind: PROCESS_MANAGER };

    // The ID of the GitHub client.
    GitHubClientId id = 1;

    // The name of the user for whom mentions are fetched.
    spine_examples.pingh.sessions.Username username = 2 [(required) = true];

    // The token of the user for whom mentions are fetched.
    spine_examples.pingh.sessions.GitHubToken token = 3 [(required) = true];

    // The stage of fetching mentions from the Github.
    FetchingStage fetching_stage = 4 [(required) = true];
}

// The stage of fetching mentions from the Github.
enum FetchingStage {

    // Mentions were requested from GitHub and are being processed.
    // Cannot start a new fetch process at this stage.
    REQUESTED = 0;

    // Processing of the mentions fetched is finished.
    // At this stage can start a new fetching from the GitHub.
    COMPLETED = 1;
}
