/*
 * Copyright 2024, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine_examples.pingh.mentions;

import "spine/options.proto";

option (type_url_prefix) = "type.pingh.spine.io";
option java_package = "io.spine.examples.pingh.mentions.event";
option java_outer_classname = "GitHubClientEventsProto";
option java_multiple_files = true;

import "spine_examples/pingh/mentions/identifiers.proto";
import "spine_examples/pingh/mentions/mention.proto";
import "spine_examples/pingh/github/github.proto";
import "spine/net/url.proto";
import "google/protobuf/timestamp.proto";

// In react to a `UserLoggedIn` event, the `PersonalAccessToken` obtained
// from `UserLoggedIn` is updated in the GitHub client.
//
// When the `UserLoggedIn` event occurs again for a particular user,
// the `PersonalAccessToken` is overwritten.
//
message GitHubTokenUpdated {

    // The ID of the GitHub client.
    GitHubClientId id = 1;

    // The new token.
    spine_examples.pingh.github.PersonalAccessToken token = 2 [(required) = true];
}

// The updating of mentions from GitHub requested.
message MentionsUpdateFromGitHubRequested {

    // The ID of the GitHub client.
    GitHubClientId id = 1;
}

// The updating of mentions from GitHub completed.
message MentionsUpdateFromGitHubCompleted {

    // The ID of the GitHub client.
    GitHubClientId id = 1;
}

// The user has been mentioned.
message UserMentioned {

    // The ID of the mention.
    MentionId id = 1;

    // The user who created the mention.
    spine_examples.pingh.github.User who_mentioned = 2 [(required) = true];

    // The title of the GitHub page in which the mention created.
    string title = 3 [(required) = true];

    // Time when the user was mentioned.
    google.protobuf.Timestamp when_mentioned = 4 [(required) = true];

    // The link to the GitHub page where the user was mentioned.
    spine.net.Url url = 5 [(required) = true];
}

// Fetching user mentions from GitHub failed.
//
// Emitted when there are technical issues on the GitHub side or
// when the user's personal access token is expired.
//
message RequestMentionsFromGitHubFailed {

    // The ID of the GitHub client that tried to fetch mentions from GitHub.
    GitHubClientId id = 1;

    // The HTTP status code of the response received from GitHub when trying to fetch mentions.
    //
    // The HTTP status code ranges from 100 to 599.
    //
    int32 response_status_code = 2 [(required) = true, (min).value = "100", (max).value = "599"];
}
